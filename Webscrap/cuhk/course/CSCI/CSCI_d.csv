"This course aims to provide an intensive hands-on introduction to the C++ programming language. Topics include the basic C++ language syntax, variable declaration, basic operators, program flow and control, defining and using functions, file and operating system interface. Specific key features of the C++ programming language such as object-oriented methodology, class templates, encapsulation, inheritance, polymorphism, etc. will be highlighted."
"This course aims to provide an intensive hands-on introduction to the Java programming language. Topics include the basic Java language syntax, variable declaration, basic operators, program flow and control, defining and using functions, file and operating system interface. Specific key features of the Java programming language such as object-oriented methodology, class templates, encapsulation, inheritance, polymorphism, etc. will be highlighted."
"This course aims to provide an intensive hands-on introduction to the Python scripting language. Topics include the basic Python language syntax, variable declaration, basic operators, programme flow and control, defining and using functions, file and operating system interface. Specific key features of the Python scripting language such as object-oriented support, high level dynamic data types, embedding within applications etc. will be highlighted."
This course introduces the computer-oriented problem-solving methods and algorithm development; object oriented programming concepts; concepts of abstract data types; simple data structures; illustrative applications. The C++ programming language will be used.
"This course aims at providing students with the basic knowledge of computer programming. In particular, programming methodologies such as object-oriented programming and structured programming, and the use of abstract data types will be illustrated using high-level programming languages such as Java."
"This course introduces computer programming in C. Students will learn the functional elements of a computer system, modern programming concepts, problem solving and creation of computer applications. Students will be able to apply these computing skills in various disciplines. This course also provides a foundation to further study in advanced computing topics."
"This course introduces computer programming in C++. Students will learn the functional elements of a computer system, object-oriented programming concepts, problem solving and creation of computer applications. Students will be able to apply these computing skills in various disciplines. This course also provides a foundation to further study in advanced computing topics."
"This course introduces computer programming in Java. Students will learn the functional elements of a computer system, modern programming concepts, problem solving and creation of computer applications. Students will be able to apply these computing skills in various disciplines. This course also provides a foundation to further study in advanced computing topics."
"This course introduces fundamental computing principles, problem-solving methods and algorithm development, simple data structures, illustrative applications. The C++ programming language will be used."
"This course introduces computer programming in Python. Students will learn modern programming concepts, problem solving and creation of computer applications using the Python programming language. Topics include basic Python language syntax, control flow, functions, lambda expressions, Python's common data structures, list comprehensions, file I/O and operating system interface, object-oriented programming, functional programming, and basic usage of common data science packages such as NumPy and Pandas.(Advisory: For non-Engineering major students only)"
"This course introduces computer application programming using a visual programming environment. Students will learn visual programming principles, modern programming concepts, and problem solving techniques. There will be learning examples and hands-on exercises for the understanding and creation of GUI-based computer applications in areas such as data processing, statistical analysis, financial reporting, etc. Students will be able to apply these computing skills in building practical computer applications for various disciplines."
"This course aims to provide an intensive hands-on introduction to the Python scripting language. Topics include the basic Python language syntax, variable declaration, basic operators, programme flow and control, defining and using functions, file and operating system interface. Specific key features of the Python scripting language such as object-oriented support, functional programming support, lambda function, list comprehension, high level dynamic data types, embedding within applications, module creation etc. will be highlighted. Special topics include using Python for web/data access, animation, as well as using Python to develop a web crawler.Advisory note: Students are advised to have basic programming experience before taking this course."
"This course introduces the concept of abstract data types and the advantages of data abstraction. Various commonly used abstract data types including vector, list, stack, queue, tree, and set and their implementations using different data structures (array, pointer based structures, linked list, 2-3 tree, B-tree, etc.) will be discussed. Sample applications such as searching, sorting, etc., will also be used to illustrate the use of data abstraction in computer programming. Analysis of the performance of searching and sorting algorithms. Application of data structure principles."
"This course is designed to provide the basic knowledge of computer organization and assembly language programming. Functions and structures of the basic building blocks: CPU, memory unit and input/output units will be introduced. Assembly language programming is used as a tool to study the internal coding of information, number representation, arithmetic operations and the flow of information within a microcomputer."
"This course formally examines the relationship between abstract data types and data structures. The implementation of abstract data types using various data structures will be discussed. Abstract data types including list, stack, queue, symbol table, tree and graph will be introduced. Introductory complexity analysis and big-O notation will be illustrated with simple algorithms such as searching and sorting."
"This course is concerned with the development of web applications. The major topics include 1) Building blocks of web applications, 2) Client-side/front-end technologies, 3) Server-side/back-end technologies, and 4) Web application design and security issues."
"This course introduces the concepts and applications of blockchain technologies, explain their potential impacts on different industries, and explore the latest techniques of blockchains. Students will learn skills in popular blockchain platforms to understand blockchain technologies and applications, in IoT and NFT, etc. Topics include: (1) Blockchain Fundamentals; (2) Blockchain Mining; (3) Sustainable Blockchain; (4) Blockchain and Hyperledger; (5) Blockchain and Decentralized Applications (DApps); (6) AI in Blockchain, and Impact on Industry; (7) IOT and Blockchain; (8) Security issue in Blockchain; (9) Scalable Blockchain and Blockchain as a Service (BaaS); (10) Blockchain Applications."
"This course introduces the data structures and algorithms useful in programming competitions and technical interviews. Students will learn efficient implementations of these data structures and algorithms as well as basic problem-solving skills for programming competitions and technical interviews. Topics include but are not limited to advanced data structures, advanced search algorithms, decomposition techniques, combinational games, basic computational geometry, and basic number theory."
"This course is designed for students to learn the principles of data mining and information processing via a hands-on approach. The first half of the course focuses on the fundamentals of data collection and processing, including the mathematical foundation and the representation of audio and visual data. In the second half of the course, classical data mining methods will be introduced, along with their applications in datasets with meaningful physical interpretations. Students are advised to have a background in programming and a basic understanding of college-level mathematics."
"This course introduces software life-cycles: system modelling, requirements analysis and specifications, design techniques, implementation methodology, testings, maintenance and engineering laboratory. Analytical tools: software metrics, system performance measurement and evaluation. Management techniques: estimations, planning, project management, communication skills and documentations. Introductions to CASE tools and security."
"The course aims at teaching students about compiler development methodology and its associated technology to modern applications. The course contents included formal aspects, lexical analysis, syntax analysis, syntax-directed translation, run-time environments, intermediate code generation, code generation and code optimization."
"This course introduces Deterministic and nondeterminisitic finite automata, regular expressions, context-free grammars, pushdown automata, context-sensitive grammars, parsing of LR(O) and LR(K) languages, Turing machines and computability."
"This course introduces the various internal components of an operating system, including process and thread management, memory management, file system, security, and synchronization."
"This course introduces the basics of algorithm analysis: correctness and time complexity. Techniques for designing efficient algorithms: greedy method, divide and conquer, and dynamic programming. Fundamental graph algorithms: graph traversals, minimum spanning trees and shortest paths. Introduction to complexity theory: polynomial-time reductions and NP-completeness."
"This course introduces the concepts and principles of database management systems. Subjects include: basic concepts, system structures, data models, database languages (SQL in particular), relational database normalization, file systems, indexing, query processing, concurrency control and recovery schemes."
"This course introduces, analyses and evaluates the important concepts found in current programming languages. The concepts are illustrated by contrasting their appearances in different languages. Major topics include: concepts, paradigms and implementation techniques."
"This course introduces logic, combinatorics, recurrence relations and graph theory. Design and analysis of algorithms: greedy method, divide and conquer, and dynamic programming. Fundamental algorithms including sorting, graph algorithms, number-theoretic algorithms and numerical algorithms. Introduction to NP-completeness."
"This course describes some algorithms commonly used in contemporary bioinformatics. After a brief introduction to basic molecular biology and genetics, four main topics will be covered with corresponding lists of algorithms:1. Sequence alignment and assembly: dynamic programming for optimal sequence alignment, FASTA and BLAST for heuristic alignment of long sequences, tree-based methods for multiple sequence alignment, suffix-tree, suffix-array and Burrows-Wheeler Transform for short read alignment, and algorithms based on de Bruijn graphs for sequence assembly2. Statistical modeling: forward, backward, Viterbi and Baum-Welch algorithms for hidden Markov models, Gibbs sampling for sequence motif discovery, and Bayesian classifiers, logistic regression and expectation-maximization for data classification and clustering3. Phylogenetics: methods based on Jukes-Cantor and Kimura models for divergence time estimation, maximum parsimony, UPGMA, Neighbor-joining and maximum likelihood methods for phylogenetic tree reconstruction.4. High-throughput data analysis: Hierarchical clustering and k-means for data clustering, and algorithms for selected problems such as signal peak calling, detection of gene fusion, haplotype phasing.Other topics such as RNA secondary structure prediction may also be covered depending on the available time."
"This course introduces the basic concepts and techniques of artificial intelligence. Knowledge representation: predicate logic and inference, semantic networks, scripts and frames, and object-oriented representation. Searching: such as A*, hill-climbing, minimax and alpha-beta pruning. Planning: the frame problem and the STRIPS formalism, representation schemes and planning strategies. Neural networks: learning algorithms, neural architecture and applications. Natural language processing. Knowledge acquisition and expert systems: properties, techniques and tools of expert systems"
"This course studies social, legal, ethical issues of information technology in society. Problems related to privacy, computer crimes, freedom of speech, intellectual property, professionalism, health, safety will be discussed. Local and global examples will be used to illustrate the issues."
Industrial and professional workshops or seminars as required by the Major programme.
"This course introduces fundamental computer graphics techniques and algorithms. Topics to be covered include: graphics hardware and interaction devices, transformation of coordination systems, scan conversion algorithms, hidden surface algorithms, illumination models and shading, rendering, texture mapping, computer animation and visualization."
"The course will mainly focus on programming exercises for advanced data structures and algorithms. Topics include dynamic programming, computational geometry, number theory, simulation, combinatorial problems, optimization techniques, graph theory, etc."
"This course covers the design and implementation of modern multimedia systems. Topics include multimedia systems design, multimedia data representation, multimedia hardware and software, multimedia communication and networking, multimedia programming and multimedia information systems."
"It is an emerging new field created by the convergence of computer graphics, computer vision and machine learning. Its main purpose is to overcome the limitations of the traditional camera by using computational techniques to produce a richer, more vivid, perhaps more perceptually meaningful representation of our visual world. The content of this course is to study ways in which samples from the real world (images and video) can be used to generate compelling computer imagery. We will learn how to acquire, represent, and render scenes from digitized photographs. The following topics will be covered: cameras, image formation and models; image manipulation (warping, morphing, mosaicing, matting, compositing); data-driven synthesis; visual perception; high dynamic range imaging and tone mapping; image-based lighting; non-photorealistic rendering; and other applications in machine vision."
"This course aims at introducing various development considerations in mobile applications. Topics include: Fundamental concepts in user interface design, mobile file systems, networking and security issues, energy saving consideration in mobile application development. Graphics programming on mobile devices such as OpenGL ES will also be discussed."
"The first part introduces basic methods, including minimum error versus maximum likelihood, parametric versus nonparametric estimation, linear regression, factor analysis, Fisher analysis, singular value decomposition, clustering analysis, Gaussian Mixture, EM algorithm, spectral clustering, nonnegative matrix factorization. The second part provides an introduction on small sample size learning, consisting of model selection criteria, RPCL learning, automatic model selection during learning, regularization and sparse learning."
"This course provides a comprehensive introduction and foundation of applied computer vision. Computer vision is the enterprise of building machines that can sense and extract information from 3D scenes. It is one of the fastest growing and exciting disciplines in today’s academia and industry, with a wide variety of applications in robotics, video surveillance, navigation, consumer electronics, human-computer interaction, medical imaging, remote sensing, space exploration, and so on. This course is designed to open the doors for students who are interested in learning about the fundamental principles and important applications of computer vision. The following topics will be covered: cameras and image formation, image filtering, edge and corner detection, image features and matching, image alignment, geometric camera models, binocular stereo, optical flow, radiometry, photometric stereo, structured light, and other applications in machine vision. We will expose students to a number of real-world applications that are important to our daily lives. Students will learn core concepts of computer vision, as well as hands-on experience to solve real world problems with computer vision."
"This course aims to provide students with basic knowledge of scientific and numerical computational methods to solve various mathematical problems that arise in science and engineering. Topics include linear systems, non-linear systems, interpolation, least squares, eigenvalue, stochastic simulation, quadrature, ODEs, PDEs, etc."
"This course aims at establishing the principles, techniques and tools in the design and development of computer game software with focus on the real time performance consideration. Topics include: stages in computer game development, concept of game engine, rendering considerations, physics effects, artificial intelligence (AI), audio effects, scripting and environment for game project development."
"Cyber Security is an important topic in modern information and communication technology. This course introduces students to major areas of Cyber Security, including introductions to cryptography, network security, computer security, and web security. Advisory: Basic knowledge on Computer Networks are suggested."
"This course is to introduce techniques in developing software projects. Topics include leveraging the web server, the database server, and the scripting languages, such as the LAMP (Linux, Apache, MySQL, PHP) platform, to develop software projects, advanced debugging techniques, and performance tuning techniques. Also, this course will introduce the knowledge on software licensing, such as the GNU public license (GPL) and the Berkeley Software Distribution (BSD) license. Last but not least, this course emphasizes in arousing the creativity and fun in developing software projects."
"This course introduces concepts, models, and implementations related to distributed and parallel computing.  Topics include parallel and distributed programming, system architectures, synchronization, and concurrency control techniques."
"This course introduces concepts and principles of cloud computing and storage. Subjects include: cloud computing models (SaaS, PaaS, IaaS), distributed and parallel data processing (MapReduce, Hadoop, multicore technologies), virtualization technologies (hypervisor, virtual machines, full virtualization, paravirtualization), data storage (cloud storage architectures, data centers, data deduplication), security/privacy issues, and case studies of real-world cloud services (Amazon EC2, Windows Azure). This course emphasizes applied methodologies of using cloud computing and storage for solving practical engineering problems."
"This course introduces how the social, technological, and natural worlds are connected, and how these relationships can be modeled as high dimensional graphs. The use of algorithmic approach to study these large scale networks so as to shed light on their connections and intrinsic properties will be employed. Topics include:1) how opinions, personal interests, idea, news and political movements spread via social networks; 2) how to maintain the robustness of the world wide web; 3) why we observe fragility in some of our electrical networks; 4) understand the formation process of large scale online social networks like Facebook; 5) how to perform effective product advertisement in large scale online social networks; and 6) how information or virus can be propagated in these large scale online social networks. This course aims to provide simple but fundamental theories on how one can understand the formation and interaction on these social networks. This course is multi-disciplinary in nature, and it is suitable for engineering, science, mathematics, economics or business students."
"This course introduces theoretical foundations of efficient learning algorithms and their limitations. Topics include Probably Approximately Correct learning, Occam learning, Vapnik–Chervonenkis dimension, boosting, Statistical Query learning, active learning, and crypotgraphic hardness of learning."
"This course aims to cover topics in online learning and online optimization. Typical topics include multi-armed bandit (MAB) problems in various settings, online convex optimization (OCO) problems such as online linear regression, online classification, and certain general reinforcement learning problems. Different algorithms will be introduced to solve these problems and analysis of the performance and efficiency will be provided."
"This course aims to introduce fundamental concepts and technologies in computer networking. The course adopts a top-down approach introducing the TCP/IP networking stack. The design of the contemporary communication applications will be studied. The fundamental concepts in implementing the reliable transport protocols, such as TCP, will be taught in this course. Design issues of TCP, such as the sliding window protocol and the congestion control, will also be included. This course will also focus on the IP network and the routing algorithms used in the Internet. Last, the design issues in the data link layer (e.g., Ethernet), including the medium access control, will be introduced."
"The course is designed to provide students with an opportunity to carry out, under the supervision of an academic staff, an independent project with research elements in engineering."
"The course is designed to provide students with an opportunity to carry out, under the supervision of an academic staff, an independent project with research elements in engineering."
"This course will discuss data structures and algorithms for solving fundamental problems in computational geometry with good theoretical guarantees. Topics covered include line-segment intersection, polygon triangulation, convex hull, linear programming, orthogonal range searching, point location, voronoi diagram, delaunay triangulation, and so on."
"This course first introduces fundamentals of machine learning with a large size of samples, including basic principles (maximum likelihood vs least redundancy) and typical structures (linear systems of hidden factors, mixture of local structures, and Markov temporal models), The second part of the course covers learning theories towards small sample size challenge, including major topics (model selection, learning regularization, two stage implementation, sparse learning, and automatic model selection) and three streams of efforts, namely generalization error estimation (CV, AIC, VC theory), shortest coding length (MML vs MDL) or similarly various Bayes (BIC, MAP, Laplace, marginal, and variational) , and BYY learning (BYY system, best harmony theory, Ying-Yang alternation updating, and five action circling implementation)."
"This course will introduce to students advanced topics in database systems including advanced data structures, concurrency control, deadlock resolutions, recovery schemes, distributed database systems, multimedia database indexing techniques, and data mining, data on the web and network data analysis."
"This course introduces a dozen of machine learning algorithms and typical applications in business intelligence, natural language processing, computer vision, and sensor-based data analyses, including four topics that consist of (1) supervised learning algorithms induced by structural risk minimization for classification and regression problems (decision trees, logistic regression, support vector machines, regularized linear regression, kernel machines, etc.), and their applications in sensor-based indoor localization, business intelligence; (2) supervised learning algorithms based on deep learning (CNN, RNN, etc.), and their applications to natural language processing and computer vision; (3) unsupervised learning algorithms for clustering and representation learning (K-means, spectral clustering, autoencoder, etc.); (4) introductions of other learning algorithms and applications, such as transfer learning, recommender systems, sensor-based activity recognition, etc."
"This course will study the design and analysis of exact and approximation algorithms using advanced techniques such as combinatorial methods, probabilistic methods, linear programming, semidefinite programming, and spectral methods."
"This course provide in-depth treatment of the following advanced computer graphics and visualization topics: radiosity rendering and global illumination, procedure texturing and modeling, image- based rendering, stereo imaging, real-time volume graphics and interactive visualization.Advisory: Students are expected to have taken CSCI3260 or its equivalent."
"This course will discuss graph theory and graph algorithms with emphasis on the algorithmic aspects of graph theory. The course will cover classical topics such as search techniques, connectivity, colouring, matching and covering, network flows, planarity, traversability, perfect graphs, and NP-completeness of graph problems. The course will also discuss FPT algorithms for solving graph problems."
"This course covers fundamental concepts in game theory. The course starts with pure strategy and mixed strategy Nash equilibrium in strategic games. It then discusses some specific types of games, including zero-sum games, Bayesian games, and introduces other types of equilibriums including correlated equilibrium and evolutionary equilibrium. Extensive games, subgame perfect equilibrium, sequential equilibrium, framing effects, behavioural strategies will then be discussed. Finally, coalitional games and the core will be discussed.Advisory: Students are expected to have taken CSCI2110 or ENGG2440 or ESTR2004, ENGG2040 or ENGG2430 or ESTR2002."
"This course provides an introduction to the following topics in quantum computation: 1. Models of quantum computation and communication; 2. Quantum algorithms and their limitations; 3. Other topics (quantum communication, quantum cryptography, quantum proofs, quantum error correction, quantum supremacy)."
"The evolution of consumer graphics hardwares leads to the introduction of parallel, programmable GPUs (Graphics Processing Units). The strong parallel computational power of GPUs not only supports real-time and realistic rendering, but also the cost- effective platform for scientific computing, such as physical simulation, numerical analysis, evolutionary computation, image processing, and computer vision, etc. This course introduces the evolution of shading language and GPU, the basic concept in GPU programming and the recent advanced usage of GPU in computer graphics and general- purpose computing. Topics covered include: shader programming, procedural texture and modelling, programmable graphics pipeline, modern shading language, GPGPU (general-purpose computing in GPU), limitations of GPU, and case studies of advanced usages of GPU."
"This course introduces the fundamental and advanced research topics in virtual reality (VR), including VR tools & metaphors, multi-sensory interactions, geometric and behavior modelling, touch-enabled interfaces, real-time immersive navigation, human factor in VR, augmented reality systems, internet-based VR applications. The web-based virtual reality interfaces plus 3D graphics engines build up the developing tools for testing the innovative ideas/solutions for the advanced VR research and real-time applications."
"This course aims to introduce important systems-level research topics in the design and implementation of practical file and storage systems. Topics include: (i) storage device organization (e.g., disk drives, disk arrays, RAID, solid state drives), (ii) file system design (e.g., log-structured file systems, distributed file systems), (iii) data availability (e.g., erasure coding techniques, data integrity protection), (iv) data consistency (e.g., journaling techniques), (v) data compression (e.g., deduplication), (vi) benchmarking (e.g., I/O metrics, benchmarking tools), etc. Depending on the current research trends, the course also discusses the latest applied storage topics, especially related to scalable and dependable big data management.Advisory: Students are expected to have taken CSCI3150 or ESTR3102 or equivalent."
"This course introduces contemporary systems for large scale data processing. Topics to be covered include, but are not limited to: (1) advanced database systems (including distributed, parallel, columnar, in-memory systems, etc., for both OTLP and OLAP applications); (2) NoSQL and NewSQL systems; (3) distributed data stores; (4) big data analysis systems; (5) graph processing systems; (6) stream processing systems; and (7) data visualization. Advanced algorithms for data analytics (e.g., distributed machine learning algorithms, streaming algorithms, etc.) that are implemented using the systems introduced in the course will also be discussed."
"This course aims to cover research topics on distributed systems. Topics including distributed time and global states, distributed coordination and consensus, P2P systems, distributed transactions and concurrency control, distributed replications and synchronization. Case studies about latest distributed systems such as Chord, Paxos and Spanner and research papers from top conferences will be discussed.Advisory: Students are expected to have solid foundations on operating systems and database systems."
"This course introduces advanced techniques for designing data structures with strong theoretical guarantees. Topics to be covered include (i) generic methods such as partial persistence, logarithmic rebuilding, weight balancing, filtering, independent sampling, bit twiddling, tabulating, etc., and (ii) specific structures such as the interval tree, the priority search tree, cuckoo hashing, the van Emde Boas structure, range min structures, locality sensitive hashing, the suffix tree, the count-min sketch, etc."
"This is a graduate level course which provides the mathematical and algorithmic foundations for data science. Target audience are students interested in doing research in algorithms, statistics, machine learning or data mining. Topics to be covered will be probability and concentration bounds, high-dimension space and its properties, nearest neighbouring search and projection methods, singular value decomposition and its algorithms, random walks and Markov chains, constrained convex optimization, online stochastic gradient descent, boosting, streaming and sampling algorithms, sketches (e.g., count-min), graph sketching, random graphs.Advisory: Students are expected to have taken CSCI3160 and CSCI3320"
"This course introduces advanced techniques for graph mining. Topics to be covered include, but are not limited to graph classification, graph clustering, community detection, influence maximization, dense subgraph finding, frequent subgraph mining, correlated subgraph mining, subgraph matching, subgraph motif enumeration, graph centralities, and other important and emerging topics in graph mining. The course will cover both classic and the state-of-the-art algorithms and systems for the topics to be studied."
"Natural language processing (NLP) is a crucial part of artificial intelligence (AI), which aims to endow computers with the ability to process human language. This course gives an overview of modern deep learning techniques for natural language processing. The course starts with basic linguistic concepts in NLP and moves from shallow bag-of-words representations to richer structural embeddings, which is the foundation for the successful use of deep learning in NLP. Then the course will guide you through three fundamental tasks of NLP: language modeling (LM), natural language understanding (NLU), and natural language generation (NLG), followed by some recent advances such as BERT and adversarial learning. Along the way we will introduce cutting-edge computational models together with insights from a linguistic perspective.Advisory: Students are expected to have the background of deep learning, machine learning, linear algebra, programming , and data structure."
"Graph is a fundamental data structure with a wide range of applications. This course covers advanced topics in graph neural networks (GNN) that include, but are not limited to: introductory algorithms and analyses for graph mining, graph-based semi-supervised learning, graph embedding techniques, graph convolution networks, graph attention networks, graph encoder-decoder, graph transformer, knowledge graphs and translation models, application of graph algorithms, etc.Advisory: Students are expected to have the background of deep learning, machine learning, linear algebra, programming, and data structure."
"This course introduces the advanced machine learning techniques for extending the boundary of life sciences. Topics to be covered include but are not limited to the recent successful stories of AI for life sciences study. We are going to cover reinforcement learning-based drug design (GENTRL), graph neural network-assisted antibiotics discovery, deep learning-enhanced super-resolution microscopy, ground-breaking molecular folding algorithm (AlphaFold), deep learning-based disease diagnosis and prediction, deep learning for single-cell and spatial transcriptomics, multi-modality/omics learning, model interpretability, privacy-preserving learning for life sciences. Along the course, we will further discuss the challenges and opportunities of AI in life sciences, such as foundation models with unlabeled data for solving data scarcity issue, out-of-distribution learning for drug design. This is a research-orientated course. By the end of the course, the students are expected to finish a substantial project, aiming at publication."
"Computational imaging systems are novel cameras that are combinations of optics, sensors, electronics,and algorithms that jointly enable new approaches for smart visual sensing and perception. It has a wide variety of applications in consumer electronics, autonomous driving, robotics, remote sensing, medical imaging, human computer interaction, machine vision, and scientific imaging. This course will cover core ideas and advanced topics of computational imaging systems and algorithms, including camera and image sensor models, high dynamc range imaging, coded imaging systems (aperture, exposure, illumination), burst photography for low-light imaging, 3D imaging, plenoptic functions and light field, Neural Radiance Fields (NeRF), compressive sensing, neuromorphic imaging, optical neural network, and more. Emphasis is on novel hardware and system design of computational cameras, as well as solving inverse problems with classic optimization algorithms and modern end-to-end learning-based methods. Students will learn the core principles of many computational imaging systems and implement key optimization-based and learning-based algorithms to solve inverse problems.Advisory note: It is preferred to have taken courses in deep learning and signal processing beforehand."
Seminars on topics in Computer Science and Engineering to be presented by experts from academic or industry. (Only pass/fail grade will be given) (Students shall gain units each time they pass the course.)
Seminars on topics in Computer Science and Engineering to be presented by experts from academic or industry. (Only pass/fail grade will be given) (Students shall gain units each time they pass the course.)
"In this course, a student is required to meet with his/her supervisor regularly who provides necessary guidance and supervision to write up a thesis and monitors the student’s academic progress."
"Thesis Research In this course, a student is required to meet with his/her supervisor regularly who provides necessary guidance and supervision to write up a thesis and monitors the student’s academic progress."
"In this course, a student is required to meet with his/her supervisor regularly who provides necessary guidance and supervision to write up a thesis and monitors the student’s academic progress."
